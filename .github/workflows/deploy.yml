name: Deploy to Netlify

on:
  push:
    branches:
      - main
      - staging # Added staging branch

jobs:
  deploy-to-netlify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        # with:
        #   version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: pnpm

      # Step to determine if this is a production deploy for Netlify's perspective
      - name: Determine Deployment Type
        id: deploy_type
        run: |
          if [[ "${{ github.ref_name }}" == "main" ]]; then
            echo "BRANCH_NAME=production" >> $GITHUB_OUTPUT
            echo "IS_PRODUCTION_NETLIFY_DEPLOY=true" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref_name }}" == "staging" ]]; then
            echo "BRANCH_NAME=staging" >> $GITHUB_OUTPUT
            echo "IS_PRODUCTION_NETLIFY_DEPLOY=false" >> $GITHUB_OUTPUT
          else
            # This case should ideally not be hit if branches are restricted in 'on.push.branches'
            echo "::warning::Branch ${{ github.ref_name }} is not explicitly configured for production/staging deploy type."
            echo "BRANCH_NAME=${{ github.ref_name }}" >> $GITHUB_OUTPUT
            echo "IS_PRODUCTION_NETLIFY_DEPLOY=false" >> $GITHUB_OUTPUT # Default to non-production for other branches
          fi

      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        env:
          # These secrets are assumed to be the same for both main and staging
          KIRBY_BASE_URL: ${{ secrets.KIRBY_BASE_URL }}
          KIRBY_API_TOKEN: ${{ secrets.KIRBY_API_TOKEN }}

      - name: Build Nuxt application
        run: pnpm run build
        env:
          # NITRO_PRESET: netlify # Usually auto-detected by Nuxt for Netlify
          KIRBY_BASE_URL: ${{ secrets.KIRBY_BASE_URL }}
          KIRBY_API_TOKEN: ${{ secrets.KIRBY_API_TOKEN }}
          # Add any other build-time environment variables

      - name: Deploy to Netlify
        uses: nwtgck/actions-netlify@v2
        with:
          publish-dir: ./.output/public
          production-branch: main # Tells Netlify its primary production branch is 'main'
          production-deploy: ${{ steps.deploy_type.outputs.IS_PRODUCTION_NETLIFY_DEPLOY == 'true' }} # Key change: true for main, false for staging
          deploy-message: 'Deploy ${{ steps.deploy_type.outputs.BRANCH_NAME }} from GitHub Actions: ${{ github.sha }}'
          # enable-pull-request-comment: false
          # enable-commit-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }} # Assumed to be the same Netlify site ID for both
        timeout-minutes: 5
